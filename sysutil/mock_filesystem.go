// Code generated by MockGen. DO NOT EDIT.
// Source: sysutil/filesystem.go

// Package sysutil is a generated GoMock package.
package sysutil

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFileSystemInterface is a mock of FileSystemInterface interface.
type MockFileSystemInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFileSystemInterfaceMockRecorder
}

// MockFileSystemInterfaceMockRecorder is the mock recorder for MockFileSystemInterface.
type MockFileSystemInterfaceMockRecorder struct {
	mock *MockFileSystemInterface
}

// NewMockFileSystemInterface creates a new mock instance.
func NewMockFileSystemInterface(ctrl *gomock.Controller) *MockFileSystemInterface {
	mock := &MockFileSystemInterface{ctrl: ctrl}
	mock.recorder = &MockFileSystemInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileSystemInterface) EXPECT() *MockFileSystemInterfaceMockRecorder {
	return m.recorder
}

// ReadLines mocks base method.
func (m *MockFileSystemInterface) ReadLines(filePath string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadLines", filePath)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadLines indicates an expected call of ReadLines.
func (mr *MockFileSystemInterfaceMockRecorder) ReadLines(filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadLines", reflect.TypeOf((*MockFileSystemInterface)(nil).ReadLines), filePath)
}
